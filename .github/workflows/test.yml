name: Build and Deploy Angular App via SFTP on O2Switch

on:
  push:
    branches:
      - test-cicd

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        
      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
      
      
      # 3. Install dependencies
      - name: Install dependencies
        run: npm install

      # 4. Build Angular App
      - name: Build Angular App
        run: npm run ng build
        
    # 4.5. Test Angular App 'ng test' for angular's test
      # - name: Test Angular App
      #   run: npm run test

      # 5. Get runner's public IP
      - name: Get runner's public IP
        id: get_ip
        run: |
          IP=$(curl -s https://api.ipify.org)
          echo "ip=$IP" >> "$GITHUB_OUTPUT"

      - name: Whitelist runner IP on o2Switch
        shell: bash
        env:
          LOGIN: ${{ secrets.O2SWITCH_LOGIN }}
          PASSWORD: ${{ secrets.O2SWITCH_PASSWORD }}
          SERVER: ${{ secrets.O2SWITCH_SERVER }}
          IP: ${{ steps.get_ip.outputs.ip }}
        run: |
          ENDPOINT='frontend/o2switch/o2switch-ssh-whitelist/index.live.php'
      
          # Encodage URL du mot de passe
          ENCODED_PASSWORD=$(echo -n "$PASSWORD" | jq -sRr @uri)
      
          echo "Ajout de l'IP du runner $IP à la whitelist..."
          ADD_RESPONSE=$(curl -sX POST -d "whitelist[address]=$IP" -d "whitelist[port]=22" "https://$LOGIN:$ENCODED_PASSWORD@$SERVER:2083/$ENDPOINT?r=add")
          echo "Réponse de l'ajout : $ADD_RESPONSE"
      
          # Vérification du succès (optionnel)
          if [[ $ADD_RESPONSE == *"error"* ]]; then
            echo "Erreur lors de l'ajout de l'IP : $ADD_RESPONSE"
            exit 60
          fi

         # 7. Deploy to Server via SFTP
      - name: Deploy to Server via SFTP
        uses: wlixcc/SFTP-Deploy-Action@v1.2.6
        with:
          username: ${{ secrets.O2SWITCH_LOGIN }}
          server: ${{ secrets.O2SWITCH_SERVER }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: 'dist/memory-app/browser/'
          remote_path: 'public_html/'
          sftpArgs: '-o ConnectTimeout=5'

      - name: Cleanup IP
        if: always()
        shell: bash
        env:
          LOGIN: ${{ secrets.O2SWITCH_LOGIN }}
          PASSWORD: ${{ secrets.O2SWITCH_PASSWORD }}
          SERVER: ${{ secrets.O2SWITCH_SERVER }}
          IP: ${{ steps.get_ip.outputs.ip }}
        run: |
          set -e
          ENDPOINT='frontend/o2switch/o2switch-ssh-whitelist/index.live.php'
          ENCODED_PASSWORD=$(echo -n "$PASSWORD" | jq -sRr @uri)
          
          for direction in in out; do
            echo "Removing $IP ($direction)..."
            curl -f -sX GET "https://$LOGIN:$ENCODED_PASSWORD@$SERVER:2083/$ENDPOINT?r=remove&address=$IP&direction=$direction&port=22" || true
            sleep 1
          done
